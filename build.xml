<!-- This is an ant makefile, type "ant" to run it -->
<project name="jnisat" default="jar">
	<target name="clean" description="removes all build artifacts">
		<delete includeEmptyDirs="true">
			<fileset dir="build" includes="**/*" />
		</delete>
	</target>

	<path id="classpath">
		<pathelement path="build" />
	</path>

	<target name="build" description="compiles the java files">
		<mkdir dir="build" />
		<javac srcdir="src" destdir="build" classpathref="classpath" includeantruntime="false" />
		<javah destdir="build" force="yes" classpathref="classpath">
			<class name="jnisat.JPicoSat" />
		</javah>
	</target>

	<condition property="jnisat.platform" value="linux">
		<contains string="${os.name}" substring="Linux" />
	</condition>

	<condition property="jnisat.platform" value="win">
		<contains string="${os.name}" substring="Windows" />
	</condition>

	<condition property="jnisat.platform" value="osx">
		<or>
			<contains string="${os.name}" substring="Mac OS X" />
			<contains string="${os.name}" substring="Darwin" />
		</or>
	</condition>

	<condition property="jnisat.arch" value="32">
		<or>
			<contains string="${os.arch}" substring="x86" />
			<contains string="${os.arch}" substring="i386" />
		</or>
	</condition>

	<condition property="jnisat.arch" value="64">
		<or>
			<contains string="${os.arch}" substring="amd64" />
			<contains string="${os.arch}" substring="x86_64" />
		</or>
	</condition>

	<condition property="jnisat.libext" value="linux${jnisat.arch}.so">
		<equals arg1="${jnisat.platform}" arg2="linux" />
	</condition>

	<condition property="jnisat.libext" value="win${jnisat.arch}.dll">
		<equals arg1="${jnisat.platform}" arg2="win" />
	</condition>

	<condition property="jnisat.libext" value="osx${jnisat.arch}.dylib">
		<equals arg1="${jnisat.platform}" arg2="osx" />
	</condition>

	<target name="detect">
		<echo message="os.name: ${os.name}" />
		<echo message="os.arch: ${os.arch}" />
		<echo message="jnisat.platform: ${jnisat.platform}" />
		<echo message="jnisat.arch:     ${jnisat.arch}" />
		<echo message="jnisat.libext:   ${jnisat.libext}" />
	</target>

	<target name="picosat" depends="build" description="compiles the jpicosat library">
		<exec executable="gcc" os="Linux" dir="build" failonerror="true">
			<arg value="-O3" />
			<arg value="-fPIC" />
			<arg value="-shared" />
			<arg value="-I${java.home}/../include/" />
			<arg value="-I${java.home}/../include/linux/" />
			<arg value="-I." />
			<arg value="../src/jnisat/JPicoSat.c" />
			<arg value="-lpicosat" />
			<arg value="-o" />
			<arg value="jpicosat-${jnisat.libext}" />
		</exec>
		<move file="build/jpicosat-${jnisat.libext}" todir="lib" />
	</target>

	<target name="jar" depends="build" description="builds the jnisat.jar file">
		<jar destfile="jnisat.jar" includes="" compress="true">
			<fileset dir="build" includes="**/*.class" />
			<fileset dir="lib" includes="*.so" />
			<fileset file="LICENSE" />
			<fileset file="README.md" />
			<manifest>
				<attribute name="Main-Class" value="jnisat.Validate" />
				<attribute name="Class-Path" value="." />
			</manifest>
		</jar>
	</target>

	<target name="validate" depends="jar" description="runs the validation program">
		<java jar="jnisat.jar" fork="true">
			<jvmarg value="-ea" />
		</java>
	</target>

</project>
