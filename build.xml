<!-- This is an ant makefile, type "ant" to run it -->
<project name="jnisat" default="build" xmlns:if="ant:if">
	<target name="clean" description="removes all build artifacts">
		<delete includeEmptyDirs="true" dir="build" />
		<delete file="org.jnisat.jar" />
	</target>

	<target name="compile">
		<mkdir dir="build" />
		<javac srcdir="src" destdir="build" includeantruntime="false" nativeheaderdir="build" target="9" source="9">
			<classpath>
				<pathelement path="build/" />
			</classpath>
			<!--<compilerarg value="-Xlint:deprecation" />-->
		</javac>
	</target>

	<target name="build" depends="compile" description="builds the org.jnisat.jar file">
		<jar destfile="org.jnisat.jar" includes="" compress="true">
			<fileset dir="build" includes="**/*.class" />
			<fileset dir="" includes="lib/**/*.so" />
			<fileset dir="" includes="lib/**/*.dll" />
			<fileset dir="" includes="lib/**/*.dylib" />
			<fileset file="LICENSE" />
			<fileset file="README.md" />
			<manifest>
				<attribute name="Main-Class" value="org.jnisat.Validate" />
				<attribute name="Class-Path" value="." />
			</manifest>
		</jar>
	</target>

	<target name="libdir" depends="compile">
		<java classname="org.jnisat.LibDetect" classpath="build" outputproperty="jnisat.libdir" failonerror="true">
			<arg value="libdir" />
		</java>
		<mkdir dir="build/${jnisat.libdir}" />
		<condition property="jnisat.win32">
			<equals arg1="${jnisat.libdir}" arg2="win32" />
		</condition>
		<condition property="jnisat.win64">
			<equals arg1="${jnisat.libdir}" arg2="win64" />
		</condition>
		<condition property="jnisat.osx64">
			<equals arg1="${jnisat.libdir}" arg2="osx64" />
		</condition>
	</target>

	<target name="jpicosat" depends="libdir" description="compiles the jpicosat adapter">
		<java classname="org.jnisat.LibDetect" classpath="build" outputproperty="jnisat.jpicosat" failonerror="true">
			<arg value="libname" />
			<arg value="jpicosat" />
		</java>
		<exec executable="gcc" os="Linux" dir="build" failonerror="true">
			<arg value="-Wall" />
			<arg value="-O3" />
			<arg value="-fPIC" />
			<arg value="-shared" />
			<arg value="-s" />
			<arg value="-I${java.home}/include/" />
			<arg value="-I${java.home}/include/linux/" />
			<arg value="-I." />
			<arg value="../src/org/jnisat/JPicoSat.c" />
			<arg value="-lpicosat" />
			<arg value="-o" />
			<arg value="${jnisat.jpicosat}" />
		</exec>
		<move file="build/${jnisat.jpicosat}" todir="lib/${jnisat.libdir}" />
	</target>

	<target name="minisat.src">
		<condition property="minisat.src">
			<available file="build/minisat-master" type="dir" />
		</condition>
	</target>

	<target name="getminisat" depends="minisat.src" unless="minisat.src">
		<mkdir dir="build" />
		<exec executable="curl" dir="build" failonerror="true">
			<arg value="-L" />
			<arg value="https://github.com/niklasso/minisat/archive/master.zip" />
			<arg value="-o" />
			<arg value="minisat-master.zip" />
		</exec>
		<exec executable="unzip" dir="build" failonerror="true">
			<arg value="minisat-master.zip" />
		</exec>
		<exec executable="patch" dir="build/minisat-master" failonerror="true">
			<arg value="-p0" />
			<arg value="-i" />
			<arg value="../../src/minisat.patch" />
		</exec>
	</target>

	<target name="jminisat" depends="libdir" description="compiles the jminisat adapter">
		<java classname="org.jnisat.LibDetect" classpath="build" outputproperty="jnisat.jminisat" failonerror="true">
			<arg value="libname" />
			<arg value="jminisat" />
		</java>
		<exec executable="g++" os="Linux" dir="build" failonerror="true">
			<arg value="-Wall" />
			<arg value="-O3" />
			<arg value="-fPIC" />
			<arg value="-shared" />
			<arg value="-s" />
			<arg value="-I${java.home}/include/" />
			<arg value="-I${java.home}/include/linux/" />
			<arg value="-I." />
			<arg value="../src/org/jnisat/JMiniSat.cpp" />
			<arg value="-lminisat" />
			<arg value="-o" />
			<arg value="${jnisat.jminisat}" />
		</exec>
		<antcall if:set="jnisat.osx64" target="getminisat" />
		<exec executable="g++" os="Mac OS X" dir="build" failonerror="true">
			<arg value="-Wall" />
			<arg value="-O3" />
			<arg value="-fPIC" />
			<arg value="-shared" />
			<arg value="-s" />
			<arg value="-I${java.home}/include/" />
			<arg value="-I${java.home}/include/darwin/" />
			<arg value="-Iminisat-master/" />
			<arg value="-I." />
			<arg value="../src/org/jnisat/JMiniSat.cpp" />
			<arg value="-lminisat" />
			<arg value="-o" />
			<arg value="${jnisat.jminisat}" />
		</exec>
		<antcall if:set="jnisat.win64" target="getminisat" />
		<exec executable="i686-pc-mingw32-g++" if:set="jnisat.win32" dir="build" failonerror="true">
			<arg value="-D __STDC_LIMIT_MACROS" />
			<arg value="-D __STDC_FORMAT_MACROS" />
			<arg value="-D NDEBUG" />
			<arg value="-Wall" />
			<arg value="-O3" />
			<arg value="-shared" />
			<arg value="-static-libgcc" />
			<arg value="-static-libstdc++" />
			<arg value="-s" />
			<arg value="-I${java.home}/include/" />
			<arg value="-I${java.home}/include/win32/" />
			<arg value="-Iminisat-master/" />
			<arg value="-I." />
			<arg value="../src/org/jnisat/JMiniSat.cpp" />
			<arg value="minisat-master/minisat/utils/System.cc" />
			<arg value="minisat-master/minisat/core/Solver.cc" />
			<arg value="minisat-master/minisat/simp/SimpSolver.cc" />
			<arg value="-o" />
			<arg value="${jnisat.jminisat}" />
			<arg value="-Wl,--kill-at" />
		</exec>
		<exec executable="x86_64-w64-mingw32-g++" if:set="jnisat.win64" dir="build" failonerror="true">
			<arg value="-D __USE_MINGW_ANSI_STDIO" />
			<arg value="-D __STDC_LIMIT_MACROS" />
			<arg value="-D __STDC_FORMAT_MACROS" />
			<arg value="-D NDEBUG" />
			<arg value="-Wall" />
			<arg value="-O3" />
			<arg value="-shared" />
			<arg value="-static-libgcc" />
			<arg value="-static-libstdc++" />
			<arg value="-s" />
			<arg value="-I${java.home}/include/" />
			<arg value="-I${java.home}/include/win32/" />
			<arg value="-Iminisat-master/" />
			<arg value="-I." />
			<arg value="../src/org/jnisat/JMiniSat.cpp" />
			<arg value="minisat-master/minisat/utils/System.cc" />
			<arg value="minisat-master/minisat/core/Solver.cc" />
			<arg value="minisat-master/minisat/simp/SimpSolver.cc" />
			<arg value="-o" />
			<arg value="${jnisat.jminisat}" />
			<arg value="-Wl,--kill-at" />
		</exec>
		<move file="build/${jnisat.jminisat}" todir="lib/${jnisat.libdir}" />
	</target>

	<target name="cominisatps" depends="libdir" description="compiles the COMiniSatPS solver">
		<java classname="org.jnisat.LibDetect" classpath="build" outputproperty="jnisat.cominisatps" failonerror="true">
			<arg value="libname" />
			<arg value="cominisatps" />
		</java>
		<exec executable="g++" os="Linux" dir="build" failonerror="true">
			<arg value="-Wall" />
			<arg value="-Wno-parentheses" />
			<arg value="-Wno-unused-label" />
			<arg value="-Wno-unused-function" />
			<arg value="-D __STDC_LIMIT_MACROS" />
			<arg value="-D __STDC_FORMAT_MACROS" />
			<arg value="-O3" />
			<arg value="-fPIC" />
			<arg value="-shared" />
			<arg value="-s" />
			<arg value="-I${java.home}/include/" />
			<arg value="-I${java.home}/include/linux/" />
			<arg value="-I." />
			<arg value="-I../solvers/COMiniSatPS" />
			<arg value="../src/org/jnisat/COMiniSatPS.cpp" />
			<arg value="../solvers/COMiniSatPS/utils/System.cc" />
			<arg value="../solvers/COMiniSatPS/core/Solver.cc" />
			<arg value="../solvers/COMiniSatPS/simp/SimpSolver.cc" />
			<arg value="-o" />
			<arg value="${jnisat.cominisatps}" />
		</exec>
		<exec executable="g++" os="Mac OS X" dir="build" failonerror="true">
			<arg value="-Wall" />
			<arg value="-Wno-parentheses" />
			<arg value="-Wno-unused-label" />
			<arg value="-Wno-unused-function" />
			<arg value="-D __STDC_LIMIT_MACROS" />
			<arg value="-D __STDC_FORMAT_MACROS" />
			<arg value="-O3" />
			<arg value="-fPIC" />
			<arg value="-shared" />
			<arg value="-I${java.home}/include/" />
			<arg value="-I${java.home}/include/darwin/" />
			<arg value="-I." />
			<arg value="-I../solvers/COMiniSatPS" />
			<arg value="../src/org/jnisat/COMiniSatPS.cpp" />
			<arg value="../solvers/COMiniSatPS/utils/System.cc" />
			<arg value="../solvers/COMiniSatPS/core/Solver.cc" />
			<arg value="../solvers/COMiniSatPS/simp/SimpSolver.cc" />
			<arg value="-o" />
			<arg value="${jnisat.cominisatps}" />
		</exec>
		<move file="build/${jnisat.cominisatps}" todir="lib/${jnisat.libdir}" />
	</target>

	<target name="detect" depends="build">
		<echo message="ant os.arch: ${os.arch}" />
		<echo message="ant os.name: ${os.name}" />
		<echo message="ant java.home: ${java.home}" />
		<java classname="org.jnisat.LibDetect" classpath="org.jnisat.jar" fork="true" failonerror="true"/>
	</target>

	<target name="validate" depends="detect" description="runs the validation program">
		<java jar="org.jnisat.jar" fork="true" failonerror="true">
			<jvmarg value="-ea" />
		</java>
	</target>

	<target name="travis" depends="validate" />

</project>
